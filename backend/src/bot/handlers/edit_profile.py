from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.utils.media_group import MediaGroupBuilder
from loader import db

from ..keyboards.register_kb import age_kb, city_kb, description_kb, gender_interested_kb, gender_kb, name_kb, start_seacrh_kb
from ..utils.AlbumMiddleware import AlbumMiddleware
from .states.EditProfile import EditProfile
from utils.utils import get_profile
edit_profile = Router()

edit_profile.message.middleware(AlbumMiddleware())

@edit_profile.message(F.text == "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§")
async def edit_name_handler(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    await state.set_state(EditProfile.waiting_for_name)

@edit_profile.message(F.text == "–í–æ–∑—Ä–∞—Å—Ç üéÇ")
async def edit_age_handler(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã):")
    await state.set_state(EditProfile.waiting_for_age)

@edit_profile.message(F.text == "–ü–æ–ª ‚ôÄ‚ôÇ")
async def edit_gender_handler(message: Message, state: FSMContext):
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª (–ú/–ñ):")
    await state.set_state(EditProfile.waiting_for_gender)

@edit_profile.message(F.text == "–ì–æ—Ä–æ–¥ üåÜ")
async def edit_city_handler(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:")
    await state.set_state(EditProfile.waiting_for_city)

@edit_profile.message(F.text == "–û —Å–µ–±–µ üìù")
async def edit_description_handler(message: Message, state: FSMContext):
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –æ —Å–µ–±–µ():")
    await message.answer("–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–∏—á–µ–≥–æ', —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—É—Å—Ç—ã–º")
    await state.set_state(EditProfile.waiting_for_description)

@edit_profile.message(F.text == "–§–æ—Ç–æ üì∏")
async def edit_photo_handler(message: Message, state: FSMContext):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ:")
    await state.set_state(EditProfile.waiting_for_photo)

@edit_profile.message(F.text == "–ò—â—É –ø–æ–ª üë´")
async def edit_preferably_gender_handler(message: Message, state: FSMContext):
    await message.answer("–ö–æ–≥–æ –≤—ã –∏—â–µ—Ç–µ? (–ú/–ñ):")
    await state.set_state(EditProfile.waiting_for_preferably_gender)


@edit_profile.message(F.text == "–ó–∞–º–æ—Ä–æ–∑–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç")
async def deactivate_account(message: Message):
   await db.deactivate_account(message.from_user.id)
   await message.answer("–í—ã –∑–∞–º–æ—Ä–æ–∑–∏–ª–∏ –≤–∞—à—É –∞–Ω–∫–µ—Ç—É")

@edit_profile.message(F.text == "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç")
async def deactivate_account(message: Message):
   await db.activate_account(message.from_user.id)
   await message.answer("–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")

@edit_profile.message(EditProfile.waiting_for_name)
async def process_name(message: Message, state: FSMContext):
    if len(message.text) > 50:
        return await message.answer("–ò–º—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å. 50 —Å–∏–º–≤–æ–ª–æ–≤)")
    await message.answer("–ò–º—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
    await db.update_name(message.from_user.id, message.text)
    await state.clear()

@edit_profile.message(EditProfile.waiting_for_age)
async def process_age(message: Message, state: FSMContext):
    if not message.text.isdigit():
        return await message.answer("–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
    age = int(message.text)
    if not 12 <= age <= 100:
        return await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (12-100)")
    await message.answer("–í–æ–∑—Ä–∞—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
    await db.update_age(message.from_user.id, age)
    await state.clear()

@edit_profile.message(EditProfile.waiting_for_gender)
async def process_gender(message: Message, state: FSMContext):
    gender = message.text.lower()
    if gender not in ['–º', '–∂']:
        return await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –ú –∏–ª–∏ –ñ")
    await message.answer("–ü–æ–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
    await db.update_gender(message.from_user.id, gender)
    await state.clear()

@edit_profile.message(EditProfile.waiting_for_city)
async def process_city(message: Message, state: FSMContext):
    if len(message.text) > 50:
        return await message.answer("–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ")
    await message.answer("–ì–æ—Ä–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
    await db.update_city(message.from_user.id, message.text)
    await state.clear()

@edit_profile.message(EditProfile.waiting_for_description)
async def process_description(message: Message, state: FSMContext):
    if len(message.text) > 500:
        return await message.answer("–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å. 500 —Å–∏–º–≤–æ–ª–æ–≤)")
    description = message.text
    if message.text == "–Ω–∏—á–µ–≥–æ":
        description = ""
    await message.answer("–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
    await db.update_description(message.from_user.id, description)
    await state.clear()

@edit_profile.message(EditProfile.waiting_for_preferably_gender)
async def process_preferably_gender(message: Message, state: FSMContext):
    gender = message.text.lower()
    if gender not in ['–º', '–∂']:
        return await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ú –∏–ª–∏ –ñ ")
    await message.answer("–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π –ø–æ–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
    await db.update_preferably_gender(message.from_user.id, gender)
    await state.clear()



@edit_profile.message(EditProfile.waiting_for_photo)
async def process_photo(message: Message, state: FSMContext, album: list = None):
    albums_photo = []
   

    if album:
        for obj in album:
            if obj.photo:
                file_id = obj.photo[-1].file_id
                albums_photo.append(file_id)
       

    else:
        albums_photo.append(message.photo[-1].file_id)

    await db.update_photos(message.from_user.id, albums_photo)
    await get_profile(message.from_user.id, message)

